name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.75, stable, nightly]
        include:
          - rust: 1.75
            toolchain: 1.75.0
          - rust: stable
            toolchain: stable
          - rust: nightly
            toolchain: nightly

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Show Rust version
        run: |
          rustc --version
          cargo --version

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features --verbose

      - name: Run integration tests
        run: cargo test --test integration --verbose

      - name: Check build
        run: cargo check --all-features

      - name: Build release
        run: cargo build --release

      - name: Check binary size
        run: |
          echo "Binary size:"
          ls -lh target/release/uniswap_relay_dapp

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-audit
        run: |
          cargo install cargo-audit --version 0.17.5

      - name: Run security audit
        run: cargo audit

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-tarpaulin
        run: |
          cargo install cargo-tarpaulin --version 0.20.1

      - name: Generate coverage report
        run: cargo tarpaulin --out Xml --output-dir coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/cobertura.xml
          flags: unix
          name: codecov-umbrella
          fail_ci_if_error: false

  dependency-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-outdated
        run: |
          cargo install cargo-outdated --version 0.12.0

      - name: Check for outdated dependencies
        run: cargo outdated --exit-code 1

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile -t uniswap-relay-dapp:test .

      - name: Test Docker image
        run: |
          docker run --rm uniswap-relay-dapp:test --help || true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-sort
        run: |
          cargo install cargo-sort --version 2.0.0

      - name: Check Cargo.toml sorting
        run: cargo sort --check

      - name: Check for TODO/FIXME comments
        run: |
          if grep -r "TODO\|FIXME" src/ --include="*.rs"; then
            echo "Found TODO/FIXME comments. Please address them before merging."
            exit 1
          fi

      - name: Check for debug prints
        run: |
          if grep -r "println!\|dbg!" src/ --include="*.rs"; then
            echo "Found debug prints. Please remove them before merging."
            exit 1
          fi 