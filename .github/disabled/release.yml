name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: uniswap-relay-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: uniswap-relay-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: uniswap-relay-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: uniswap-relay-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: uniswap-relay-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - name: Build release binary
        run: |
          cargo build --release --target ${{ matrix.target }}
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp target/${{ matrix.target }}/release/uniswap_relay.exe ${{ matrix.artifact_name }}
          else
            cp target/${{ matrix.target }}/release/uniswap_relay ${{ matrix.artifact_name }}
          fi

      - name: Create checksums
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            sha256sum ${{ matrix.artifact_name }} > ${{ matrix.artifact_name }}.sha256
          else
            shasum -a 256 ${{ matrix.artifact_name }} > ${{ matrix.artifact_name }}.sha256
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.artifact_name }}
            ${{ matrix.artifact_name }}.sha256

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/uniswap-relay
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            uniswap-relay-linux-x86_64/uniswap-relay-linux-x86_64
            uniswap-relay-linux-x86_64/uniswap-relay-linux-x86_64.sha256
            uniswap-relay-linux-aarch64/uniswap-relay-linux-aarch64
            uniswap-relay-linux-aarch64/uniswap-relay-linux-aarch64.sha256
            uniswap-relay-macos-x86_64/uniswap-relay-macos-x86_64
            uniswap-relay-macos-x86_64/uniswap-relay-macos-x86_64.sha256
            uniswap-relay-macos-aarch64/uniswap-relay-macos-aarch64
            uniswap-relay-macos-aarch64/uniswap-relay-macos-aarch64.sha256
            uniswap-relay-windows-x86_64.exe/uniswap-relay-windows-x86_64.exe
            uniswap-relay-windows-x86_64.exe/uniswap-relay-windows-x86_64.exe.sha256
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 