version: '3.8'

services:
  # Redis for integration tests
  redis-test:
    image: redis:7-alpine
    container_name: uniswap_relay_redis_test
    ports:
      - "6380:6379"
    environment:
      - REDIS_PASSWORD=test_password
    command: redis-server --requirepass test_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - test-network

  # Mock subgraph service for testing
  mock-subgraph:
    image: mockserver/mockserver:latest
    container_name: uniswap_relay_mock_subgraph
    ports:
      - "8080:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
    volumes:
      - ./test/mockserver.properties:/config/mockserver.properties
      - ./test/initializerJson.json:/config/initializerJson.json
    networks:
      - test-network

  # Prometheus for metrics testing
  prometheus-test:
    image: prom/prometheus:latest
    container_name: uniswap_relay_prometheus_test
    ports:
      - "9091:9090"
    volumes:
      - ./test/prometheus.test.yml:/etc/prometheus/prometheus.yml
      - prometheus_test_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - test-network

  # Grafana for metrics visualization during testing
  grafana-test:
    image: grafana/grafana:latest
    container_name: uniswap_relay_grafana_test
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_test_data:/var/lib/grafana
      - ./test/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./test/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - test-network

volumes:
  prometheus_test_data:
  grafana_test_data:

networks:
  test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 