version: '3.8'

services:
  # Redis for production
  redis:
    image: redis:7-alpine
    container_name: uniswap_relay_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    networks:
      - uniswap_network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: uniswap_relay_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - uniswap_network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: uniswap_relay_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - uniswap_network

  # Uniswap Relay DApp
  app:
    image: ${REGISTRY:-ghcr.io}/${IMAGE_NAME:-pwmpw/uniswap_relay_dapp}:${TAG:-latest}
    container_name: uniswap_relay_dapp
    restart: unless-stopped
    ports:
      - "8080:8080"  # Health check
      - "9090:9090"  # Metrics
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
    volumes:
      - ./config:/app/config:ro
      - app_logs:/var/log/uniswap_relay_dapp
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - uniswap_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AlertManager for alerting
  alertmanager:
    image: prom/alertmanager:latest
    container_name: uniswap_relay_alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.enable-lifecycle'
    networks:
      - uniswap_network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  app_logs:
    driver: local

networks:
  uniswap_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 